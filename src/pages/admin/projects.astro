---
// admin/projects.astro - List all projects from Supabase
import Layout from '../../layouts/Layout.astro'; // <--- Path is correct relative to src/pages/admin/
import { supabase } from '../../../lib/supabase'; // <--- Path is correct relative to src/pages/admin/projects.astro
import { getOptimizedImageUrl } from '../../../lib/utils';
import type { ProjectWithCategory } from '../../../lib/database.types';

let projects: ProjectWithCategory[] = [];
let fetchError: string | null = null;

try {
    const { data, error } = await supabase
        .from('projects')
        .select('*, categories(name, slug)') // Join with categories for display
        .order('display_order', { ascending: true })
        .order('created_at', { ascending: false });

    if (error) throw error;
    projects = data || [];

} catch (e: any) {
    console.error("Admin Projects Fetch Error:", e.message);
    fetchError = e.message;
    projects = []; // Fallback to empty array if fetch fails
}
---

<Layout title="Manage Projects">
    <section class="admin-dashboard-section">
        <div class="container admin-dashboard-container">
            <h1 class="heading-2 text-center mb-xl">Manage Projects</h1>
            <p class="text-center text-neutral-600 mb-lg">
                Add, edit, or delete your agency's portfolio projects.
            </p>

            {fetchError && (
                <div class="auth-message auth-message-error mb-xl">
                    Error loading projects from Supabase: {fetchError}<br/>
                    (Please ensure Supabase keys are correct and your Codespace network is active.)
                </div>
            )}

            <div class="admin-actions-header">
                <a href="/admin/dashboard" class="btn-secondary btn-small">
                    <i class="fa-solid fa-arrow-left"></i> Back to Dashboard
                </a>
                <a href="/admin/projects/new" class="btn-add-new">
                    <i class="fa-solid fa-plus"></i> Add New Project
                </a>
            </div>

            {projects.length === 0 && !fetchError ? (
                <p class="text-center text-neutral-600">No projects found. Click "Add New Project" to get started!</p>
            ) : (
                <table class="admin-projects-table">
                    <thead>
                        <tr>
                            <th>Order</th>
                            <th>Image</th>
                            <th>Title</th>
                            <th>Category</th>
                            <th>Published</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        {projects.map(project => (
                            <tr key={project.id}>
                                <td>{project.display_order}</td>
                                <td>
                                    <img
                                        src={getOptimizedImageUrl(project.image_url)}
                                        alt={project.title}
                                        class="thumbnail-preview"
                                    />
                                </td>
                                <td>{project.title}</td>
                                <td>{project.categories?.name || 'N/A'}</td>
                                <td>{project.is_published ? 'Yes' : 'No'}</td>
                                <td class="admin-actions">
                                    <a href={`/admin/projects/${project.id}/edit`} class="btn-small btn-edit">Edit</a>
                                    <button
                                        class="btn-small btn-delete"
                                        data-project-id={project.id}
                                        data-project-title={project.title}
                                        onclick="deleteProject(this)"
                                    >
                                        Delete
                                    </button>
                                </td>
                            </tr>
                        ))}
                    </tbody>
                </table>
            )}
        </div>
    </section>

    <script>
        // Client-side script for delete confirmation
        document.addEventListener('astro:page-load', () => {
            window.deleteProject = async function(button: HTMLButtonElement) {
                const projectId = button.dataset.projectId;
                const projectTitle = button.dataset.projectTitle;

                if (!projectId) {
                    alert('Error: Project ID not found.');
                    return;
                }

                if (confirm(`Are you sure you want to delete project "${projectTitle}"? This cannot be undone.`)) {
                    try {
                        const adminPassword = prompt("Please enter admin password to confirm deletion:");
                        if (!adminPassword) {
                            alert("Deletion cancelled. Admin password is required.");
                            return;
                        }

                        const response = await fetch('/api/admin/projects/delete', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ id: projectId, adminPassword }), // Send password for API protection
                        });

                        if (response.ok) {
                            alert(`Project "${projectTitle}" deleted successfully.`);
                            window.location.reload(); // Reload page to update list
                        } else {
                            const errorData = await response.json();
                            alert(`Failed to delete project: ${errorData.error}`);
                        }
                    } catch (error) {
                        console.error('Delete project network error:', error);
                        alert('An unexpected error occurred during deletion.');
                    }
                }
            };
        });
    </script>
</Layout>