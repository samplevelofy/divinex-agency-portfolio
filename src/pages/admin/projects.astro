---
import Layout from '../../../layouts/Layout.astro';
import { supabase } from '../../../lib/supabase';
import type { ProjectWithCategory, Category } from '../../../lib/database.types';

let projects: ProjectWithCategory[] = [];
let categories: Category[] = [];
let fetchError: string | null = null;

// This section now ONLY attempts to fetch from Supabase.
// If it fails, an error message will be displayed, and no projects.
try {
    const { data: cats, error: catErr } = await supabase.from('categories').select('*').order('name');
    if (catErr) throw catErr;
    categories = cats || [];

    const { data: projs, error: projErr } = await supabase.from('projects')
        .select('*, categories(*)')
        .order('display_order', { ascending: true })
        .order('created_at', { ascending: false });
    if (projErr) throw projErr;
    projects = projs || [];

} catch (e: any) {
    console.error("Admin Projects Fetch Error:", e.message);
    fetchError = e.message; // Capture error for display
    // If an error occurs, projects array will remain empty.
}

// Pass data as props or directly available in template
// This allows the client-side components (if any) to work with pre-fetched data
---

<Layout title="Manage Projects">
    <section class="admin-page-section">
        <div class="container admin-container">
            <div class="admin-header">
                <h1 class="heading-2 mb-sm">Manage Projects</h1>
                <p class="text-neutral-600">Add, edit, or delete projects in your Divinex portfolio.</p>
                <a href="/admin/projects/new" class="btn-primary mt-lg">Add New Project</a>
            </div>

            {fetchError && (
                <div class="admin-message-error mt-xl">
                    Error loading projects: {fetchError}<br/>
                    Projects cannot be managed until Codespace network or Supabase connection is resolved.
                </div>
            )}

            {projects.length === 0 && !fetchError ? (
                <div class="text-center py-xl text-neutral-500">No projects found. Start by adding a new one!</div>
            ) : (
                <div class="projects-list mt-2xl">
                    {projects.map((project) => (
                        <div class="project-list-item">
                            <img
                                src={project.thumbnail || '/placeholder-project.jpg'}
                                alt={project.title}
                                class="project-list-thumbnail"
                            />
                            <div class="project-list-details">
                                <h3 class="project-list-title">{project.title}</h3>
                                <p class="project-list-category">{project.categories?.name || 'Uncategorized'}</p>
                                <p class="project-list-status">{project.is_published ? 'Published' : 'Draft'}</p>
                            </div>
                            <div class="project-list-actions">
                                <a href={`/admin/projects/${project.id}/edit`} class="btn-secondary btn-sm">Edit</a>
                                <button class="btn-danger btn-sm" data-project-id={project.id}>Delete</button>
                            </div>
                        </div>
                    ))}
                </div>
            )}
        </div>
    </section>

    <script>
        document.addEventListener('astro:page-load', () => {
            const deleteButtons = document.querySelectorAll('.btn-danger');
            deleteButtons.forEach(button => {
                button.addEventListener('click', async (event) => {
                    if (!confirm('Are you sure you want to delete this project?')) {
                        return;
                    }

                    const projectId = (event.currentTarget as HTMLElement).dataset.projectId;
                    if (!projectId) {
                        console.error('Project ID not found for deletion.');
                        return;
                    }

                    try {
                        const response = await fetch(`/api/admin/projects/delete`, {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ id: projectId }),
                        });

                        if (response.ok) {
                            alert('Project deleted successfully!');
                            window.location.reload(); // Reload to update the list
                        } else {
                            const errorData = await response.json();
                            alert(`Failed to delete project: ${errorData.error || 'Unknown error'}`);
                        }
                    } catch (error) {
                        console.error('Network error during project deletion:', error);
                        alert('Network error. Could not delete project.');
                    }
                });
            });
        });
    </script>

    <style>
        .admin-page-section {
            padding-top: var(--spacing-4xl);
            padding-bottom: var(--spacing-4xl);
            background-color: var(--color-neutral-50);
            min-height: calc(100vh - 5rem);
        }
        .admin-container {
            max-width: 900px;
            background-color: var(--color-background-light);
            padding: var(--spacing-xl) var(--spacing-3xl);
            border-radius: var(--spacing-lg);
            box-shadow: 0 10px 15px -3px rgba(0,0,0,0.1), 0 4px 6px -2px rgba(0,0,0,0.05);
        }
        .admin-header {
            text-align: center;
            margin-bottom: var(--spacing-3xl);
        }
        .heading-2 {
            font-size: 2rem;
            font-weight: 700;
            color: var(--color-text-dark);
            margin-bottom: var(--spacing-sm);
        }
        .text-neutral-600 {
            color: var(--color-neutral-600);
        }
        .btn-primary {
            display: inline-block;
            padding: var(--spacing-sm) var(--spacing-md);
            background-color: var(--color-brand-primary);
            color: var(--color-text-on-dark);
            border-radius: var(--spacing-sm);
            font-weight: 500;
            transition: background-color 0.3s ease;
            text-decoration: none;
            margin-top: var(--spacing-lg);
        }
        .btn-primary:hover {
            background-color: var(--color-coral-600);
        }

        .admin-message-error {
            background-color: rgba(255,99,71,0.1);
            color: var(--color-coral-700);
            border: 1px solid var(--color-coral-200);
            padding: var(--spacing-md);
            border-radius: var(--spacing-sm);
            text-align: center;
            margin-top: var(--spacing-xl);
        }

        .projects-list {
            margin-top: var(--spacing-2xl);
            display: flex;
            flex-direction: column;
            gap: var(--spacing-md);
        }
        .project-list-item {
            display: flex;
            align-items: center;
            gap: var(--spacing-md);
            padding: var(--spacing-md);
            background-color: var(--color-neutral-50);
            border-radius: var(--spacing-sm);
            box-shadow: 0 1px 2px 0 rgba(0,0,0,0.05);
        }
        .project-list-thumbnail {
            width: 80px;
            height: 60px;
            object-fit: cover;
            border-radius: var(--spacing-xs);
            flex-shrink: 0;
        }
        .project-list-details {
            flex-grow: 1;
        }
        .project-list-title {
            font-size: 1.125rem;
            font-weight: 600;
            color: var(--color-text-dark);
            margin: 0;
        }
        .project-list-category, .project-list-status {
            font-size: 0.875rem;
            color: var(--color-neutral-600);
            margin: 0;
        }
        .project-list-status {
            font-weight: 500;
            color: var(--color-coral-700); /* Highlight for status */
        }
        .project-list-actions {
            display: flex;
            gap: var(--spacing-sm);
            flex-shrink: 0;
        }
        .btn-secondary {
            background-color: var(--color-neutral-200);
            color: var(--color-text-dark);
            padding: var(--spacing-xs) var(--spacing-sm);
            border-radius: var(--spacing-xs);
            font-size: 0.875rem;
            text-decoration: none;
            transition: background-color 0.2s ease;
            border: none;
            cursor: pointer;
        }
        .btn-secondary:hover {
            background-color: var(--color-neutral-300);
        }
        .btn-danger {
            background-color: var(--color-coral-600);
            color: var(--color-text-on-dark);
            padding: var(--spacing-xs) var(--spacing-sm);
            border-radius: var(--spacing-xs);
            font-size: 0.875rem;
            border: none;
            cursor: pointer;
            transition: background-color 0.2s ease;
        }
        .btn-danger:hover {
            background-color: var(--color-coral-700);
        }
        .btn-sm { /* Re-using sm button size */
            padding: 0.4rem 0.8rem;
            font-size: 0.875rem;
        }
    </style>
</Layout>